{"version":3,"sources":["assets/img/logo.PNG","components/Header.js","components/LoginButton.js","components/GoogleAnalyticsField.js","components/GoogleAnalyticsRow.js","components/GoogleAnalyticsList.js","components/Body.js","components/Footer.js","components/GoogleAnalyticsTrack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Helmet","name","content","className","alt","src","logo","title","href","rel","target","Component","LoginButton","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","isAuthenticated","_handleLoginOK","response","setState","props","onLogin","accessToken","_handleLoginKO","google_login","buttonText","clientId","process","onFailure","onSuccess","scope","GoogleAnalyticsField","resultsCalculated","_checkFieldValue","id","date","children","parseFloat","GoogleAnalyticsRow","percentageDifferenceDay","percentageDifferenceMonth","percentageDifferenceWeek","resultsDay","resultsDayComparative","resultsMonth","resultsMonthComparative","resultsWeek","resultsWeekComparative","GoogleAnalyticsField_GoogleAnalyticsField","authBearer","url","URL","data","reportRequests","viewId","dateRanges","startDate","endDate","metrics","expression","dimensions","_getGAData","_this2","fetch","method","headers","Headers","Authorization","body","JSON","stringify","then","json","results","resultsConcrete","reports","console","log","rows","_processResults","isNaN","toFixed","_this3","forEach","element","index","day","parseInt","currentValue","values","maxDaysMonth","maxDaysWeek","maxDaysDay","_updateResults","GoogleAnalyticsList","gaItems","map","gaItem","GoogleAnalyticsRow_GoogleAnalyticsRow","webProperties","profiles","items","Body","login","_triggerLogin","LoginButton_LoginButton","GoogleAnalyticsList_GoogleAnalyticsList","Footer","ref","GoogleAnalyticsTrack","gaCode","async","App","GoogleAnalyticsTrack_GoogleAnalyticsTrack","Header_Header","Body_Body","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adcefe34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.89c5ade6.PNG\";","import React, { Component } from 'react'\r\n\r\n// Assets\r\nimport logo from '../assets/img/logo.PNG'\r\n\r\n// Libs\r\nimport { Helmet } from 'react-helmet'\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return(\r\n            <header>\r\n                {/* Logo + Social Network Links + Helmet Meta Data*/}\r\n                <Helmet>\r\n                    <title>Ganalytics Dashboard</title>\r\n                    <meta name=\"description\" content=\"A simple view for your GA accounts\" />\r\n                </Helmet>\r\n                <div className=\"columns\">\r\n                    <div className=\"column is-offset-4 is-4\">\r\n                        <figure className=\"image logoImage\">\r\n                            <img \r\n                                alt=\"Ganalytics Dashboard - A simple view for your GA accounts\"\r\n                                src={logo}\r\n                                title=\"Ganalytics Dashboard - A simple view for your GA accounts\"  />\r\n                        </figure>\r\n                    </div>\r\n                </div>\r\n                <div className=\"columns\">\r\n                    <div className=\"column is-offset-4 is-2\">\r\n                        <span className=\"icon is-medium\">\r\n                            <a \r\n                                href=\"https://twitter.com/xaconi\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                                title=\"Follow me on Twitter!\">\r\n                                <i className=\"fab fa-twitter-square fa-2x\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"column is-2\">\r\n                        <span className=\"icon is-medium\">\r\n                            <a \r\n                                href=\"https://github.com/Xaconi/ganalytics-dashboard\" \r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\" \r\n                                title=\"Check the source code on Github!\">\r\n                                <i className=\"fab fa-github-square fa-2x\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n// Libs\r\nimport { GoogleLogin } from 'react-google-login'\r\n\r\nexport class LoginButton extends Component {\r\n\r\n    // State init\r\n    state = {\r\n        isAuthenticated : false\r\n    }\r\n\r\n    _handleLoginOK = (response) => {\r\n        this.setState( { isAuthenticated : true })\r\n        this.props.onLogin(response.accessToken)\r\n    }\r\n\r\n    _handleLoginKO = (response) => {\r\n        this.setState( { isAuthenticated : false })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isAuthenticated === false){\r\n            return(\r\n                <GoogleLogin\r\n                    buttonText=\"Login\"\r\n                    clientId={process.env.REACT_APP_GOOGLE_API}\r\n                    onFailure={this._handleLoginKO}\r\n                    onSuccess={this._handleLoginOK}\r\n                    scope=\"https://www.googleapis.com/auth/analytics.edit\" />\r\n            );\r\n        } else\r\n            return null\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\n// Libs\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class GoogleAnalyticsField extends Component {\r\n\r\n    static propTypes = {\r\n        authBearer : PropTypes.string,\r\n        id : PropTypes.string,\r\n        date: PropTypes.string,\r\n        resultsCalculated: PropTypes.bool\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.resultsCalculated\r\n                    ? <div \r\n                        className={\r\n                            \"googleAnalyticsFieldLoaded \" + \r\n                            (\r\n                                this._checkFieldValue()\r\n                                ? 'googleAnalyticsFieldGood'\r\n                                : 'googleAnalyticsFieldBad'\r\n                            )\r\n                        }\r\n                        key={this.props.id + this.props.date}\r\n                        >\r\n                            {\r\n                                this._checkFieldValue()\r\n                                ? '+'\r\n                                : ''\r\n                            }\r\n                            { this.props.children } %\r\n                            {\r\n                                this._checkFieldValue()\r\n                                ? ' 📈'\r\n                                : ' 📉'\r\n                            }\r\n                        </div>\r\n                    : <div key={this.props.id + this.props.date} className=\"textElementNotLoaded\">  \r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    _checkFieldValue() {\r\n        return parseFloat(this.props.children) >= 0 || this.props.children === '♾️'\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n// Components\r\nimport { GoogleAnalyticsField } from './GoogleAnalyticsField'\r\n\r\n// Libs\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class GoogleAnalyticsRow extends Component {\r\n\r\n    state = {\r\n        resultsCalculated : false,\r\n        percentageDifferenceDay : 0,\r\n        percentageDifferenceMonth : 0,\r\n        percentageDifferenceWeek : 0,\r\n        resultsDay : 0,\r\n        resultsDayComparative : 0,\r\n        resultsMonth : 0,\r\n        resultsMonthComparative : 0,\r\n        resultsWeek : 0,\r\n        resultsWeekComparative : 0,\r\n    }\r\n\r\n    static propTypes = {\r\n        authBearer : PropTypes.string,\r\n        id : PropTypes.string,\r\n        name : PropTypes.string,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr className=\"googleAnalyticsRow\">\r\n                <td>\r\n                    {this.props.name}\r\n                </td>\r\n\r\n                <td>\r\n                    <GoogleAnalyticsField \r\n                        authBearer={this.props.authBearer}\r\n                        id={this.props.id}\r\n                        resultsCalculated={this.state.resultsCalculated}>\r\n                        {this.state.percentageDifferenceDay}\r\n                    </GoogleAnalyticsField>\r\n                </td>\r\n\r\n                <td>\r\n                    <GoogleAnalyticsField \r\n                        authBearer={this.props.authBearer}\r\n                        id={this.props.id}\r\n                        resultsCalculated={this.state.resultsCalculated}>\r\n                        {this.state.percentageDifferenceWeek}\r\n                    </GoogleAnalyticsField>\r\n                </td>\r\n\r\n                <td>\r\n                    <GoogleAnalyticsField \r\n                        authBearer={this.props.authBearer}\r\n                        id={this.props.id}\r\n                        resultsCalculated={this.state.resultsCalculated}>\r\n                        {this.state.percentageDifferenceMonth}\r\n                    </GoogleAnalyticsField>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = new URL(\"https://analyticsreporting.googleapis.com/v4/reports:batchGet\")\r\n        const data = {\r\n            'reportRequests' : [\r\n                {\r\n                    viewId:`ga:${this.props.id}`,\r\n                    'dateRanges' : [\r\n                        {\r\n                            'startDate': '60daysAgo',\r\n                            'endDate': 'today',\r\n                        },\r\n                    ],\r\n                    'metrics': [\r\n                        {'expression' : 'ga:sessions'},\r\n                    ],\r\n                    'dimensions': [\r\n                        {'name' : 'ga:nthDay'},\r\n                    ]\r\n                },\r\n            ]\r\n        }\r\n\r\n        this._getGAData(url, data)\r\n    }\r\n\r\n    _getGAData(url, data) {\r\n        fetch(url, \r\n            {\r\n                method: 'post',\r\n                headers: new Headers({\r\n                    'Authorization' : `Bearer ${this.props.authBearer}`\r\n                }),\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then(response => response.json())\r\n            .then(results => {\r\n                const resultsConcrete = results.reports\r\n                console.log({ resultsConcrete })\r\n\r\n                if(!(typeof results.reports[0].data.rows === 'undefined')) {\r\n                    this.setState({ \r\n                        results : results.reports[0].data.rows\r\n                    })\r\n                    this._processResults()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    _updateResults() {\r\n        let percentageDifferenceDay = 0\r\n        let percentageDifferenceMonth = 0\r\n        let percentageDifferenceWeek = 0\r\n\r\n        if(!isNaN(this.state.resultsDayComparative) && this.state.resultsDayComparative !== 0)\r\n            percentageDifferenceDay = parseFloat(((this.state.resultsDay - this.state.resultsDayComparative)* 100) / this.state.resultsDayComparative).toFixed(2)\r\n        else\r\n            percentageDifferenceDay = '♾️'\r\n\r\n        if(!isNaN(this.state.resultsMonthComparative) && this.state.resultsMonthComparative !== 0)\r\n            percentageDifferenceMonth = parseFloat(((this.state.resultsMonth - this.state.resultsMonthComparative)* 100) / this.state.resultsMonthComparative).toFixed(2)\r\n        else\r\n            percentageDifferenceMonth = '♾️'\r\n\r\n         if(!isNaN(this.state.resultsWeekComparative) && this.state.resultsWeekComparative !== 0)\r\n            percentageDifferenceWeek = parseFloat(((this.state.resultsWeek - this.state.resultsWeekComparative)* 100) / this.state.resultsWeekComparative).toFixed(2)\r\n        else\r\n            percentageDifferenceWeek = '♾️'\r\n\r\n        this.setState({ \r\n            percentageDifferenceDay,\r\n            percentageDifferenceMonth,\r\n            percentageDifferenceWeek,\r\n            resultsCalculated : true \r\n        })\r\n    }\r\n\r\n    _processResults() {\r\n        const maxDays = 60\r\n        const maxDaysMonth = 30\r\n        const maxDaysWeek = 7\r\n        const maxDaysDay = 1\r\n\r\n        let resultsMonth = 0\r\n        let resultsWeek = 0\r\n        let resultsDay = 0\r\n        let resultsMonthComparative = 0\r\n        let resultsWeekComparative = 0\r\n        let resultsDayComparative = 0\r\n\r\n        this.state.results.forEach((element, index) => {\r\n\r\n            const day = maxDays - parseInt(element.dimensions[0])\r\n            const currentValue = parseInt(element.metrics[0].values[0])\r\n\r\n            if(day <= maxDaysMonth)\r\n                resultsMonth += currentValue\r\n            else if(day > maxDaysMonth && day <= (maxDaysMonth*2))\r\n                resultsMonthComparative += currentValue\r\n\r\n            if(day <= maxDaysWeek)\r\n                resultsWeek += currentValue\r\n            else if(day > maxDaysWeek && day <= (maxDaysWeek*2))\r\n                resultsWeekComparative += currentValue\r\n\r\n            if(day <= maxDaysDay)\r\n                resultsDay += currentValue\r\n            else if(day > maxDaysDay && day <= (maxDaysDay*2))\r\n                resultsDayComparative += currentValue\r\n\r\n            // End of loop, update the state with the results\r\n            if(index === (this.state.results.length - 1)){\r\n                this.setState({\r\n                    resultsDay,\r\n                    resultsDayComparative,\r\n                    resultsMonth,\r\n                    resultsMonthComparative,\r\n                    resultsWeek,\r\n                    resultsWeekComparative,\r\n                })\r\n                this._updateResults()\r\n            }\r\n        });\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n// Components\r\nimport { GoogleAnalyticsRow } from './GoogleAnalyticsRow'\r\n\r\n// Libs\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class GoogleAnalyticsList extends Component {\r\n    \r\n    // State init\r\n    state = {\r\n        gaItems : []\r\n    }\r\n\r\n    static propTypes = {\r\n        authBearer: PropTypes.string\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"googleAnalyticsList\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Website</th>\r\n                            <th>1 day data</th>\r\n                            <th>1 week data</th>\r\n                            <th>1 month data</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.gaItems.map(\r\n                                gaItem => { return (\r\n                                    <GoogleAnalyticsRow \r\n                                        authBearer={this.props.authBearer}\r\n                                        id={gaItem.webProperties[0].profiles[0].id} \r\n                                        key={gaItem.id} \r\n                                        name={gaItem.name} \r\n                                        />\r\n                                ) }\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\r\n            `https://www.googleapis.com/analytics/v3/management/accountSummaries`, \r\n            {\r\n                method: 'get',\r\n                headers: new Headers({\r\n                    'Authorization' : `Bearer ${this.props.authBearer}`\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(results => {\r\n                console.log({ results })\r\n                this.setState({ gaItems : results.items })\r\n            })\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n// Components\r\nimport { LoginButton } from './LoginButton'\r\nimport { GoogleAnalyticsList } from './GoogleAnalyticsList'\r\n\r\nexport class Body extends Component {\r\n\r\n    // State init\r\n\tstate = {\r\n\t\tlogin : false,\r\n\t\tauthBearer : ''\r\n\t}\r\n\r\n\t_triggerLogin = (authBearer) => {\r\n\t\tthis.setState({ \r\n\t\t\tlogin : true,\r\n\t\t\tauthBearer \r\n\t\t})\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"container is-fluid\">\r\n                <div className=\"notification\">\r\n                    <div className=\"columns\">\r\n                        <div className=\"column is-offset-1 is-10\">\r\n                            <div className=\"column is-12\">\r\n                                <p className=\"explanation\">\r\n                                    <strong>gAnalytics Dashboard</strong> is simple tool to check and review your Google Analytics accounts results. \r\n                                    The results (at the moment) are the GA sessions from the last day, the last week and the last month, each one with the previous period comparative.\r\n                                    It offers a simple view in order to check if the GA account is going well or not. Also, you can see the percentage of the GA sessions compared with \r\n                                    the previous period of time.\r\n                                    <br></br><br></br>\r\n                                    You must login with your Google account (the same you use on Google Analytics) and gave access to read-only to your accounts, in order to see\r\n                                    the results on this App.\r\n                                </p>\r\n                            </div>\r\n                            <LoginButton onLogin={this._triggerLogin}/>\r\n                            {this.state.login \r\n                                ? <GoogleAnalyticsList authBearer={this.state.authBearer} />\r\n                                : <p></p>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return(\r\n            <footer>\r\n                <div className=\"columns\">\r\n                    <div className=\"column is-offset-3 is-6\">\r\n                        <p>\r\n                            Made with ❤️ by <a \r\n                                href=\"https://twitter.com/xaconi\" \r\n                                ref=\"noreferrer noopener\"\r\n                                target=\"_blank\"\r\n                                title=\"Made with ❤️ by @Xaconi\">\r\n                                @Xaconi\r\n                            </a>.\r\n                            Fork the code on <a \r\n                                href=\"https://github.com/Xaconi/ganalytics-dashboard\" \r\n                                ref=\"noreferrer noopener\"\r\n                                target=\"_blank\"\r\n                                title=\"Fork the code on Github to improve this app!\">\r\n                                Github\r\n                            </a> to improve this app!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n// Libs\r\nimport { Helmet } from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class GoogleAnalyticsTrack extends Component {\r\n\r\n    static propTypes = {\r\n        gaCode : PropTypes.string,\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Helmet>\r\n                <link rel=\"preconnect dns-prefetch\" href=\"https://www.google-analytics.com\" />\r\n                <script>{`\r\n                    window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;\r\n                    ga('create', '${this.props.gaCode}', 'auto');\r\n                    ga('send', 'pageview');\r\n                `}\r\n                </script>\r\n                <script async src='https://www.google-analytics.com/analytics.js' />\r\n            </Helmet>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\nimport './assets/css/App.css';\n\n// Components\nimport { Header } from './components/Header'\nimport { Body } from './components/Body'\nimport { Footer } from './components/Footer'\nimport { GoogleAnalyticsTrack } from './components/GoogleAnalyticsTrack'\n\n// Libs\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nclass App extends Component {\n\n  \trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<GoogleAnalyticsTrack gaCode=\"UA-135636972-1\"/>\n\t\t\t\t<Header />\n\t\t\t\t<Body />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n  \t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}